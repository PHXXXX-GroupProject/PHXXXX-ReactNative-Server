scalar ObjectId
scalar Date

#QUERY==========================================
type Query {
    GetMe: User!
    GetUser(id: ObjectId!): User!
    GetRole(id: ObjectId!): Role!
    GetFine(id: ObjectId!): Fine!
    GetUsers: [User!]!
    GetRoles: [Role!]!
}

type User {
    _id: ObjectId!
    username: String!
    roleId: ObjectId!
    role: Role!
    secret: Secret #DANGER: Must always be null for outsiders
    preferredName: String
    avatar: String

    fineIds: [ObjectId!]!
    fines: [Fine!]!
}

type Secret {
    hash: String!
}

type Role {
    _id: ObjectId!
    name: String!
    permissions: [Permission!]!
}

type Permission {
    _id: ObjectId!
    moduleId: ObjectId!
    module: Module!
    value: String!
}

type Module {
    _id: ObjectId!
    name: String!
    url: String!
}

type Fine {
    _id: ObjectId!
    offenderId: ObjectId!
    offender: User!
    officerId: ObjectId!
    officer: User!
    offenseIds: [ObjectId!]!
    offenses: [Offense!]!
    time: Date!
    payment: Payment
}

type Offense {
    _id: ObjectId!
    name: String!
    amount: Int!
}

type Payment {
    time: Date!
}

#MUTATION========================================
type Mutation {
    SignIn(username: String!, password: String!): String!
}